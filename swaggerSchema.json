{
  "swagger": "2.0",
  "info": {
    "description": "TRTL Services API Swagger Schema",
    "version": "0.9.0",
    "title": "TRTL.Services API",
    "termsOfService": "https://trtl.services",
    "contact": {
      "email": "api@trtl.services"
    },
    "license": {
      "name": "AGPL-3.0 ",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    }
  },
  "host": "api.trtl.services",
  "basePath": "/v1",
  "tags": [
    {
      "name": "address",
      "description": "Generate, manage and interact with TRTL addresses generated with TRTL Services."
    },
    {
      "name": "transfer",
      "description": "Send and view transactions belonging to TRTL addresses generated with TRTL Services."
    },
    {
      "name": "wallet",
      "description": "View your Turtle-Service wallet containers registered with TRTL Services."
    },
    {
      "name": "status",
      "description": "Get status regarding TRTL Services infrastructure."
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/address": {
      "post": {
        "tags": [
          "address"
        ],
        "summary": "Create a new adresss.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bodyAddress"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "TRTLuzAzNs1E1RBFhteX56A5353vyHuSJ5AYYQfoN97PNbcMDvwQo4pUWHs7SYpuD9ThvA7AD3r742kwTmWh5o9WFaB9JXH8evP"
                },
                "blockIndex": {
                  "type": "integer",
                  "example": 734396
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/address/{address}": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "List details of an address.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "availableBalance": {
                  "type": "integer",
                  "example": 2039.29
                },
                "lockedBalance": {
                  "type": "integer",
                  "example": 22.09
                },
                "blockIndex": {
                  "type": "integer",
                  "example": 734396
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "address"
        ],
        "summary": "Delete an address",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "TRTLuxtknTzHFw1GbpJCJxHFtNQdt1vuBHnr84suMomJJ6MZ5R4mUBH9bSvL4L5tKw9Zw377XD87DAZxUBK4DCoXAQQAh5K7szBBdHCpj6hXR7FRUtDFSHooJLRtszmHUFpzPxLRXU8ESfa4b5kSQcPeryDmBbv3aWCewS8x5X8E4kYM17xtYUQHfb3"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/address/all": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "List all addresses.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "example": [
                "TRTLuzAzNs1E1RBFhteX56A5353vyHuSJ5AYYQfoN97PNbcMDvwQo4pUWHs7SYpuD9ThvA7AD3r742kwTmWh5o9WFaB9JXH8evP",
                "TRTLuzAzNs1E1RBFhteX56A5353vyHuSJ5AYYQfoN97PNbcMDvwQo4pUWHs7SYpuD9ThvA7AD3r742kwTmWh5o9WFaB9JXH8evP"
              ]
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/address/scan/{address}/{blockIndex}": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "Scan an address for transactions between a 100 block range.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathAddress"
          },
          {
            "$ref": "#/components/parameters/pathBlockIndex"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "example": [
                {
                  "address": "TRTLuzAzNs1E1RBFhteX56A5353vyHuSJ5AYYQfoN97PNbcMDvwQo4pUWHs7SYpuD9ThvA7AD3r742kwTmWh5o9WFaB9JXH8evP",
                  "amount": 100,
                  "fee": 1,
                  "sfee": 2.1,
                  "transactionHash": "EohMUzR1DELyeQM9RVVwpmn5Y1DP0lh1b1ZpLQrfXQsgtvGHnDdJSG31nX2yESYZ",
                  "blockHash": "b8ItjbZCoGNXbT9OxQyZusNL0KNAS3iTqam0WX1gW6lITnkCkHzlNWSHqH9b4Kx7",
                  "paymentId": "VFhcdUodkBmQNEMgKGjCwXo0VPGWsft7frzPJ1T9lyEWXgBVSFzrbNN78vMFaad3",
                  "timestamp": 1536190370,
                  "extra": "KB6DQOFbcctAuOInLtkbtNtl40fG3aoNMelem1VeyjD6tQEO9DPT7Z5B8YbID4LP",
                  "blockIndex": 735963,
                  "confirms": 40
                },
                {
                  "address": "TRTLuzAzNs1E1RBFhteX56A5353vyHuSJ5AYYQfoN97PNbcMDvwQo4pUWHs7SYpuD9ThvA7AD3r742kwTmWh5o9WFaB9JXH8evP",
                  "amount": 30,
                  "fee": 0.3,
                  "sfee": 0.63,
                  "transactionHash": "v3ThajDV54R25LLt8Z0lvyVf39hsYCRvEu2LiHDBd2YKUb4hxmOa2R0dT9RQVhPK",
                  "blockHash": "4oCsFa6vhxBMJiKJ5rJqOdGxR0tXhq8TY91URj5Sn1i5CBBosz6rdJsl2FtCYhPD",
                  "paymentId": null,
                  "extra": "0TkNvSWhSeLr4Q9U0uaXYqNLYVIKtOAKaM3LlzEK44C3LtypfGLnvIjQKwWZv0M9",
                  "timestamp": 1536191470,
                  "blockIndex": 735974,
                  "confirms": 29
                }
              ]
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/address/keys/{address}": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "List the public and secret spend key of an address.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "spendPublicKey": {
                  "type": "string",
                  "example": "3ba1a60c3f8697ba4916ccbe5639579abcfd04457428e13c368fadcf893bb949"
                },
                "spendSecretKey": {
                  "type": "string",
                  "example": "bf2ef03d8293043e65f85e091bd1464ed2d687a1ec4dfa374ef8220f28ff800a"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/address/integrate": {
      "post": {
        "tags": [
          "address"
        ],
        "summary": "Create an integrated address with an address and payment ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bodyAddress"
          },
          {
            "$ref": "#/components/parameters/bodyPaymentId"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "TRTLuxtknTzHFw1GbpJCJxHFtNQdt1vuBHnr84suMomJJ6MZ5R4mUBH9bSvL4L5tKw9Zw377XD87DAZxUBK4DCoXAQQAh5K7szBBdHCpj6hXR7FRUtDFSHooJLRtszmHUFpzPxLRXU8ESfa4b5kSQcPeryDmBbv3aWCewS8x5X8E4kYM17xtYUQHfb3"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/address/integrate/{address}": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "List integrated addresses belonging to an address.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "example": [
                {
                  "address": "TRTLuxtknTzHFw1GbpJCJxHFtNQdt1vuBHnr84suMomJJ6MZ5R4mUBH9bSvL4L5tKw9Zw377XD87DAZxUBK4DCoXAQQAh4sxEq8eiJbesVDs6md1hWnmWgSNVA8N8RrzPY58TASkmN8rkZN4b5kSQcPeryDmBbv3aWCewS8x5X8E4kYM17xtYW1ngoP",
                  "paymentId": "7d89a2d16365a1198c46db5bbe1af03d2b503a06404f39496d1d94a0a46f8803"
                },
                {
                  "address": "TRTLuxtknTzHFw1GbpJCJxHFtNQdt1vuBHnr84suMomJJ6MZ5R4mUBH9bSvL4L5tKw9Zw377XD87DAZxUBK4DCoXAQQAhBRV4yQeiJbesVDs6md1hWnmWgSNVA8N8RrzPY58TASkmN8rkZN4b5kSQcPeryDmBbv3aWCewS8x5X8E4kYM17xtYXRdivT",
                  "paymentId": "7d89a2d16365a1198c46db5bbe1af03d2b503a06404f39496d1d94a0a46f8804"
                }
              ]
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transfer/fee/{amount}/{host}/{port}": {
      "get": {
        "tags": [
          "transfer"
        ],
        "summary": "Calculate the fee in TRTL for a wallet container.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathAmount"
          },
          {
            "$ref": "#/components/parameters/pathHost"
          },
          {
            "$ref": "#/components/parameters/pathPort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "example": 29
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transfer": {
      "post": {
        "tags": [
          "transfer"
        ],
        "summary": "Create a new transaction.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bodyFromAddress"
          },
          {
            "$ref": "#/components/parameters/bodyToAddress"
          },
          {
            "$ref": "#/components/parameters/bodyFee"
          },
          {
            "$ref": "#/components/parameters/bodyAmount"
          },
          {
            "$ref": "#/components/parameters/bodyPaymentId"
          },
          {
            "$ref": "#/components/parameters/bodyExtra"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "string",
              "example": {
                "transactionHash": "EohMUzR1DELyeQM9RVVwpmn5Y1DP0lh1b1ZpLQrfXQsgtvGHnDdJSG31nX2yESYZ"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/{transactionHash}": {
      "get": {
        "tags": [
          "transfer"
        ],
        "summary": "Get a transaction created with TRTL Services by hash.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathTransactionHash"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "TRTLuzAzNs1E1RBFhteX56A5353vyHuSJ5AYYQfoN97PNbcMDvwQo4pUWHs7SYpuD9ThvA7AD3r742kwTmWh5o9WFaB9JXH8evP"
                },
                "amount": {
                  "type": "number",
                  "format": "float",
                  "example": 12.49
                },
                "fee": {
                  "type": "number",
                  "format": "float",
                  "example": 0.1
                },
                "sfee": {
                  "type": "number",
                  "format": "float",
                  "example": 2.1
                },
                "transactionHash": {
                  "type": "string",
                  "example": "EohMUzR1DELyeQM9RVVwpmn5Y1DP0lh1b1ZpLQrfXQsgtvGHnDdJSG31nX2yESYZ"
                },
                "blockHash": {
                  "type": "string",
                  "example": "b8ItjbZCoGNXbT9OxQyZusNL0KNAS3iTqam0WX1gW6lITnkCkHzlNWSHqH9b4Kx7"
                },
                "paymentId": {
                  "type": "string",
                  "example": "VFhcdUodkBmQNEMgKGjCwXo0VPGWsft7frzPJ1T9lyEWXgBVSFzrbNN78vMFaad3"
                },
                "extra": {
                  "type": "string",
                  "example": "KB6DQOFbcctAuOInLtkbtNtl40fG3aoNMelem1VeyjD6tQEO9DPT7Z5B8YbID4LP"
                },
                "timestamp": {
                  "type": "integer",
                  "example": 1536191370
                },
                "blockIndex": {
                  "type": "integer",
                  "example": 735963
                },
                "confirms": {
                  "type": "integer",
                  "example": 23
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/wallet": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "List wallet container.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Web Wallet"
                },
                "location": {
                  "type": "string",
                  "example": "Germany"
                },
                "host": {
                  "type": "string",
                  "example": "127.0.0.1"
                },
                "port": {
                  "type": "integer",
                  "example": 8070
                },
                "timeout": {
                  "type": "integer",
                  "example": 3000
                },
                "fee": {
                  "type": "number",
                  "format": "float",
                  "example": 1.3
                },
                "availableBalance": {
                  "type": "number",
                  "format": "float",
                  "example": 92329.25
                },
                "lockedBalance": {
                  "type": "number",
                  "format": "float",
                  "example": 123.2
                },
                "status": {
                  "type": "integer",
                  "example": 1
                },
                "blockCount": {
                  "type": "integer",
                  "example": 988880
                },
                "knownBlockCount": {
                  "type": "integer",
                  "example": 988880
                },
                "peerCount": {
                  "type": "integer",
                  "example": 51
                },
                "updated": {
                  "type": "string",
                  "example": "2018-11-20 01:50:00"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/status": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "List TRTL Services infrastructure.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "example": [
                {
                  "name": "chain",
                  "state": 1,
                  "status": "OK",
                  "synced": 1,
                  "blockIndex": 869566,
                  "timestamp": "2018-10-09 15:23:10"
                },
                {
                  "name": "worker",
                  "state": 1,
                  "status": "Online",
                  "synced": 1,
                  "blockIndex": 858855,
                  "timestamp": "2018-10-09 15:23:10"
                },
                {
                  "name": "api",
                  "state": 1,
                  "status": "Online",
                  "synced": 1,
                  "blockIndex": 858855,
                  "timestamp": "2018-10-09 15:23:10"
                }
              ]
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "pathAddress": {
        "name": "address",
        "description": "A valid TRTL address generated with TRTL Services.",
        "in": "path",
        "required": true,
        "type": "string"
      },
      "bodyAddress": {
        "name": "address",
        "description": "A valid TRTL address generated with TRTL Services.",
        "in": "body",
        "required": true,
        "type": "string",
        "schema": {
          "type": "string",
          "pattern": "/^(TRTL)/",
          "minLength": 99,
          "maxLength": 99,
          "example": "TRTLuy13NKuBdHCpj6hXR7FRUtDFSHooJLRtszmHUFpzPxLRXU8ESfa4b5kSQcPeryDmBbv3aWCewS8x5X8E4kYM17xtYVPvAJB"
        }
      },
      "bodyFromAddress": {
        "name": "from",
        "description": "A valid TRTL address generated with TRTL Services.",
        "in": "body",
        "required": true,
        "type": "string",
        "schema": {
          "type": "string",
          "pattern": "/^(TRTL)/",
          "minLength": 99,
          "maxLength": 99,
          "example": "TRTLv25Le9LH9ktX8xxdLVK1heeLXa9nfEyfqrYzFfZe9e8ZkPcFRyi4b5kSQcPeryDmBbv3aWCewS8x5X8E4kYM17xtYVeKE17"
        }
      },
      "bodyToAddress": {
        "name": "to",
        "description": "A valid TRTL address.",
        "in": "body",
        "required": true,
        "type": "string",
        "schema": {
          "type": "string",
          "pattern": "/^(TRTL)/",
          "minLength": 99,
          "maxLength": 99,
          "example": "TRTLuxZsjAreiJbesVDs6md1hWnmWgSNVA8N8RrzPY58TASkmN8rkZN4b5kSQcPeryDmBbv3aWCewS8x5X8E4kYM17xtYSeBbs6"
        }
      },
      "pathBlockIndex": {
        "name": "blockIndex",
        "description": "A valid TRTL block index.",
        "in": "path",
        "required": true,
        "type": "integer"
      },
      "bodyPaymentId": {
        "name": "paymentId",
        "description": "A valid 64 character hex string.",
        "in": "body",
        "required": true,
        "type": "string",
        "schema": {
          "type": "string",
          "pattern": "/^$|[a-zA-Z0-9]+$/",
          "minLength": 64,
          "maxLength": 64,
          "example": "7d89a2d16365a1198c46db5bbe1af03d2b503a06404f39496d1d94a0a46f8803"
        }
      },
      "pathTransactionHash": {
        "name": "transactionHash",
        "description": "A valid 64 character hex string.",
        "in": "path",
        "required": true,
        "type": "string",
        "schema": {
          "type": "string",
          "pattern": "/^$|[a-zA-Z0-9]+$/",
          "minLength": 64,
          "maxLength": 64,
          "example": "EohMUzR1DELyeQM9RVVwpmn5Y1DP0lh1b1ZpLQrfXQsgtvGHnDdJSG31nX2yESYZ"
        }
      },
      "bodyExtra": {
        "name": "extra",
        "description": "A valid 64 character hex string.",
        "in": "body",
        "required": true,
        "type": "string",
        "schema": {
          "type": "string",
          "pattern": "/^$|[a-zA-Z0-9]+$/",
          "minLength": 64,
          "maxLength": 64,
          "example": "a4cf40d50423ea8f23b45ba08d0ebcb165af994ebf4885abd9864c5ce7ded87f"
        }
      },
      "pathAmount": {
        "name": "amount",
        "description": "A valid TRTL amount with two decimal points.",
        "in": "path",
        "required": true,
        "type": "number",
        "schema": {
          "type": "number",
          "format": "float",
          "minimum": 0.01,
          "example": 2948
        }
      },
      "bodyAmount": {
        "name": "amount",
        "description": "A valid TRTL amount with two decimal points.",
        "in": "body",
        "required": true,
        "type": "number",
        "schema": {
          "type": "number",
          "format": "float",
          "minimum": 0.01,
          "example": 2948.29
        }
      },
      "bodyFee": {
        "name": "fee",
        "description": "A valid TRTL amount with two decimal points.",
        "in": "body",
        "required": true,
        "type": "number",
        "schema": {
          "type": "number",
          "format": "float",
          "minimum": 0.1,
          "example": 0.1
        }
      },
      "pathHost": {
        "name": "host",
        "description": "The host of the wallet container.",
        "in": "path",
        "required": true,
        "type": "string",
        "schema": {
          "type": "string",
          "example": "127.0.0.1"
        }
      },
      "pathPort": {
        "name": "port",
        "description": "The port of the wallet container.",
        "in": "path",
        "required": true,
        "type": "integer",
        "schema": {
          "type": "integer",
          "example": 8070
        }
      }
    },
    "responses": {
      "200": {
        "description": "OK"
      },
      "201": {
        "description": "Created"
      },
      "400": {
        "description": "Bad Request"
      },
      "401": {
        "description": "Unauthorized"
      },
      "403": {
        "description": "Forbidden"
      },
      "404": {
        "description": "Not Found"
      },
      "405": {
        "description": "Invalid Input"
      },
      "503": {
        "description": "Service Unavailable"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}